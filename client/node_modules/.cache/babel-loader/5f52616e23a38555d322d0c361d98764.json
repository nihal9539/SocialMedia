{"ast":null,"code":"import * as CommentApi from \"../api/CommentRequest\";\nexport const getComment = postId => async dispatch => {\n  dispatch({\n    type: \"COMMENT_START\"\n  });\n  try {\n    const datas = await CommentApi.getComments(postId);\n    // console.log(datas.data);\n\n    dispatch({\n      type: \"COMMENT_SUCCESS\",\n      pa: datas.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"COMMENT_FAIL\"\n    });\n    console.log(error);\n  }\n};\nexport const createComment = data => async dispatch => {\n  console.log(data);\n  dispatch({\n    type: \"COMMENT_START\"\n  });\n  try {\n    const newComment = await CommentApi.createComment(data);\n    console.log(newComment.data);\n    dispatch({\n      type: \"COMMENT_SUCCESS\",\n      data: newComment.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"COMMENT_FAIL\"\n    });\n  }\n};","map":{"version":3,"names":["CommentApi","getComment","postId","dispatch","type","datas","getComments","pa","data","error","console","log","createComment","newComment"],"sources":["D:/git projects/SocialMedia/client/src/Action/CommentAction.js"],"sourcesContent":["import * as CommentApi from \"../api/CommentRequest\"\r\nexport const getComment = (postId) => async (dispatch) => {\r\n    dispatch({ type: \"COMMENT_START\" })\r\n    try {\r\n        const datas = await CommentApi.getComments(postId)\r\n        // console.log(datas.data);\r\n\r\n        dispatch({ type: \"COMMENT_SUCCESS\", pa: datas.data })\r\n    } catch (error) {\r\n        dispatch({ type: \"COMMENT_FAIL\" })\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const createComment = (data) => async (dispatch) => {\r\n    console.log(data);\r\n    dispatch({ type: \"COMMENT_START\" })\r\n    try {\r\n        const newComment = await CommentApi.createComment(data)\r\n        console.log(newComment.data);\r\n        dispatch({ type: \"COMMENT_SUCCESS\" ,data:newComment.data})\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: \"COMMENT_FAIL\" })\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,UAAU,MAAM,uBAAuB;AACnD,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACtDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAgB,CAAC,CAAC;EACnC,IAAI;IACA,MAAMC,KAAK,GAAG,MAAML,UAAU,CAACM,WAAW,CAACJ,MAAM,CAAC;IAClD;;IAEAC,QAAQ,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEG,EAAE,EAAEF,KAAK,CAACG;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAe,CAAC,CAAC;IAClCM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAEtB;AACJ,CAAC;AAED,OAAO,MAAMG,aAAa,GAAIJ,IAAI,IAAK,MAAOL,QAAQ,IAAK;EACvDO,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjBL,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAgB,CAAC,CAAC;EACnC,IAAI;IACA,MAAMS,UAAU,GAAG,MAAMb,UAAU,CAACY,aAAa,CAACJ,IAAI,CAAC;IACvDE,OAAO,CAACC,GAAG,CAACE,UAAU,CAACL,IAAI,CAAC;IAC5BL,QAAQ,CAAC;MAAEC,IAAI,EAAE,iBAAiB;MAAEI,IAAI,EAACK,UAAU,CAACL;IAAI,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBN,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAe,CAAC,CAAC;EACtC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}