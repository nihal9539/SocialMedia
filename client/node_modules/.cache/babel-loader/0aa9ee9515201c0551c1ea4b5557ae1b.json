{"ast":null,"code":"var _jsxFileName = \"D:\\\\git projects\\\\SocialMedia\\\\client\\\\src\\\\pages\\\\chat\\\\chat.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react'\n// import \"./chat.css\"\n// import LogoSearch from \"../../components/LogoSearch/LogoSearch\"\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { userChats } from '../../api/ChatRequesst';\nimport Conversation from '../../components/Conversation/Conversation';\n// import NavIcons from '../../components/NavIcons/NavIcons';\n// import ChatBox from '../../components/ChatBox/ChatBox';\n// import {io} from \"socket.io-client\"\n// const Chat = () => {\n\n//     // const dispatch = useDispatch();\n//     const socket = useRef();\n//     const { user } = useSelector((state) => state.authReducer.authData);\n//     const [chats, setChats] = useState([]);\n//     const [onlineUsers, setOnlineUsers] = useState([]);\n//     const [currentChat, setCurrentChat] = useState(null);\n//     const [sendMessage, setSendMessage] = useState(null);\n//     const [receivedMessage, setReceivedMessage] = useState(null);\n\n//     useEffect(()=>{\n//         socket.current = io(\"http://localhost/8800\")\n//         socket.current.emit('new-user-add',user._id)\n//         socket.current.on(\"get-users\",(users)=>{\n//             setOnlineUsers(users)\n//         })\n//     },[user])\n\n//     useEffect(() => {\n//         const getChats = async () => {\n//           try {\n//             const { data } = await userChats(user._id);\n//             setChats(data);\n//             console.log(data);\n//           } catch (error) {\n//             console.log(error);\n//           }\n//         };\n//         getChats();\n//       }, [user._id]);\n\n//     return (\n//         <div className=\"Chat\">\n//             {/* Left Side */}\n//             <div className=\"Left-side-chat\">\n//                 <LogoSearch />\n//                 <div className=\"Chat-container\">\n//                     <h2>Chats</h2>\n//                     <div className=\"Chat-list\">\n//                         {chats.map((chat) => (\n//                             <div\n//                                 onClick={() => {\n//                                     setCurrentChat(chat);\n//                                 }}\n//                             >\n\n//                                 <Conversation\n//                                     data={chat}\n//                                     currentUser={user._id}\n//                                     // online={checkOnlineStatus(chat)}\n//                                 />\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             </div>\n\n//             {/* Right Side */}\n\n//             <div className=\"Right-side-chat\">\n//                 <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\n//                     <NavIcons />\n//                 </div>\n//                 {/* chat body */}\n//                 <ChatBox\n//                     chat={currentChat}\n//                     currentUser={user._id}\n//                     setSendMessage={setSendMessage}\n//                     receivedMessage={receivedMessage}\n//                 />\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Chat\nimport React, { useRef, useState } from \"react\";\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\n// import Conversation from \"../../components/Coversation/Conversation\";\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\nimport \"./Chat.css\";\nimport { useEffect } from \"react\";\nimport { userChats } from \"../../api/ChatRequests\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const socket = useRef();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  const [chats, setChats] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [sendMessage, setSendMessage] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null);\n  // Get the chat in chat section\n  useEffect(() => {\n    const getChats = async () => {\n      try {\n        const {\n          data\n        } = await userChats(user._id);\n        setChats(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getChats();\n  }, [user._id]);\n\n  // Connect to Socket.io\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8800\");\n    socket.current.emit(\"new-user-add\", user._id);\n    socket.current.on(\"get-users\", users => {\n      setOnlineUsers(users);\n    });\n  }, [user]);\n\n  // Send Message to socket server\n  //   useEffect(() => {\n  //     if (sendMessage!==null) {\n  //       socket.current.emit(\"send-message\", sendMessage);}\n  //   }, [sendMessage]);\n\n  // Get the message from socket server\n  useEffect(() => {\n    socket.current.on(\"recieve-message\", data => {\n      console.log(data);\n      setReceivedMessage(data);\n    });\n  }, []);\n  const checkOnlineStatus = chat => {\n    const chatMember = chat.members.find(member => member !== user._id);\n    const online = onlineUsers.find(user => user.userId === chatMember);\n    return online ? true : false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(LogoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chat-list\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentChat(chat);\n            },\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              data: chat,\n              currentUser: user._id,\n              online: checkOnlineStatus(chat)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Right-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20rem\",\n          alignSelf: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NavIcons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        chat: currentChat,\n        currentUser: user._id,\n        setSendMessage: setSendMessage,\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"MbM4u7uitm1wEXGOMYP6iCJhOWE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Conversation","React","useRef","useState","ChatBox","LogoSearch","NavIcons","useEffect","userChats","useDispatch","useSelector","io","jsxDEV","_jsxDEV","Chat","_s","dispatch","socket","user","state","authReducer","authData","chats","setChats","onlineUsers","setOnlineUsers","currentChat","setCurrentChat","sendMessage","setSendMessage","receivedMessage","setReceivedMessage","getChats","data","_id","error","console","log","current","emit","on","users","checkOnlineStatus","chat","chatMember","members","find","member","online","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","currentUser","style","width","alignSelf","_c","$RefreshReg$"],"sources":["D:/git projects/SocialMedia/client/src/pages/chat/chat.jsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react'\r\n// import \"./chat.css\"\r\n// import LogoSearch from \"../../components/LogoSearch/LogoSearch\"\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { userChats } from '../../api/ChatRequesst';\r\nimport Conversation from '../../components/Conversation/Conversation';\r\n// import NavIcons from '../../components/NavIcons/NavIcons';\r\n// import ChatBox from '../../components/ChatBox/ChatBox';\r\n// import {io} from \"socket.io-client\"\r\n// const Chat = () => {\r\n\r\n//     // const dispatch = useDispatch();\r\n//     const socket = useRef();\r\n//     const { user } = useSelector((state) => state.authReducer.authData);\r\n//     const [chats, setChats] = useState([]);\r\n//     const [onlineUsers, setOnlineUsers] = useState([]);\r\n//     const [currentChat, setCurrentChat] = useState(null);\r\n//     const [sendMessage, setSendMessage] = useState(null);\r\n//     const [receivedMessage, setReceivedMessage] = useState(null);\r\n\r\n\r\n//     useEffect(()=>{\r\n//         socket.current = io(\"http://localhost/8800\")\r\n//         socket.current.emit('new-user-add',user._id)\r\n//         socket.current.on(\"get-users\",(users)=>{\r\n//             setOnlineUsers(users)\r\n//         })\r\n//     },[user])\r\n\r\n//     useEffect(() => {\r\n//         const getChats = async () => {\r\n//           try {\r\n//             const { data } = await userChats(user._id);\r\n//             setChats(data);\r\n//             console.log(data);\r\n//           } catch (error) {\r\n//             console.log(error);\r\n//           }\r\n//         };\r\n//         getChats();\r\n//       }, [user._id]);\r\n\r\n\r\n//     return (\r\n//         <div className=\"Chat\">\r\n//             {/* Left Side */}\r\n//             <div className=\"Left-side-chat\">\r\n//                 <LogoSearch />\r\n//                 <div className=\"Chat-container\">\r\n//                     <h2>Chats</h2>\r\n//                     <div className=\"Chat-list\">\r\n//                         {chats.map((chat) => (\r\n//                             <div\r\n//                                 onClick={() => {\r\n//                                     setCurrentChat(chat);\r\n//                                 }}\r\n//                             >\r\n                                \r\n//                                 <Conversation\r\n//                                     data={chat}\r\n//                                     currentUser={user._id}\r\n//                                     // online={checkOnlineStatus(chat)}\r\n//                                 />\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Right Side */}\r\n\r\n//             <div className=\"Right-side-chat\">\r\n//                 <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\r\n//                     <NavIcons />\r\n//                 </div>\r\n//                 {/* chat body */}\r\n//                 <ChatBox\r\n//                     chat={currentChat}\r\n//                     currentUser={user._id}\r\n//                     setSendMessage={setSendMessage}\r\n//                     receivedMessage={receivedMessage}\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Chat\r\nimport React, { useRef, useState } from \"react\";\r\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\r\n// import Conversation from \"../../components/Coversation/Conversation\";\r\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\r\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\r\nimport \"./Chat.css\";\r\nimport { useEffect } from \"react\";\r\nimport { userChats } from \"../../api/ChatRequests\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useRef();\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [sendMessage, setSendMessage] = useState(null);\r\n  const [receivedMessage, setReceivedMessage] = useState(null);\r\n  // Get the chat in chat section\r\n  useEffect(() => {\r\n    const getChats = async () => {\r\n      try {\r\n        const { data } = await userChats(user._id);\r\n        setChats(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getChats();\r\n  }, [user._id]);\r\n\r\n  // Connect to Socket.io\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8800\");\r\n    socket.current.emit(\"new-user-add\", user._id);\r\n    socket.current.on(\"get-users\", (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n  // Send Message to socket server\r\n//   useEffect(() => {\r\n//     if (sendMessage!==null) {\r\n//       socket.current.emit(\"send-message\", sendMessage);}\r\n//   }, [sendMessage]);\r\n\r\n\r\n  // Get the message from socket server\r\n  useEffect(() => {\r\n    socket.current.on(\"recieve-message\", (data) => {\r\n      console.log(data)\r\n      setReceivedMessage(data);\r\n    }\r\n\r\n    );\r\n  }, []);\r\n\r\n\r\n  const checkOnlineStatus = (chat) => {\r\n    const chatMember = chat.members.find((member) => member !== user._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMember);\r\n    return online ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      {/* Left Side */}\r\n      <div className=\"Left-side-chat\">\r\n        <LogoSearch />\r\n        <div className=\"Chat-container\">\r\n          <h2>Chats</h2>\r\n          <div className=\"Chat-list\">\r\n            {chats.map((chat) => (\r\n              <div\r\n                onClick={() => {\r\n                  setCurrentChat(chat);\r\n                }}\r\n              >\r\n                <Conversation\r\n                  data={chat}\r\n                  currentUser={user._id}\r\n                  online={checkOnlineStatus(chat)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Side */}\r\n\r\n      <div className=\"Right-side-chat\">\r\n        <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\r\n          <NavIcons />\r\n        </div>\r\n        <ChatBox\r\n          chat={currentChat}\r\n          currentUser={user._id}\r\n          setSendMessage={setSendMessage}\r\n          receivedMessage={receivedMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}