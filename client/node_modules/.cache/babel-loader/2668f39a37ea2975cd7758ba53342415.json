{"ast":null,"code":"var _jsxFileName = \"D:\\\\git projects\\\\SocialMedia\\\\client\\\\src\\\\components\\\\ChatBox\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getUser } from '../../api/userRequest';\nimport Profile from \"../../img/profileImg.jpg\";\nimport \"./ChatBox.css\";\nimport { addMessage, getMessages } from '../../api/MessageRequest';\nimport { format } from \"timeago.js\";\nimport InputEmoji from \"react-input-emoji\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat,\n  currentUser,\n  setSendMessage,\n  receivedMessage\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const imageRef = useRef();\n  const scroll = useRef();\n  const handleChange = newMsg => {\n    setNewMessage(newMsg);\n  };\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderId: currentUser,\n      text: newMessage,\n      chatId: chat._id\n    };\n    const receiverId = chat.members.find(id => id !== currentUser);\n    // send message to socket server\n    setSendMessage({\n      ...message,\n      receiverId\n    });\n    // send message to database\n    try {\n      const {\n        data\n      } = await addMessage(message);\n      setMessages([...messages, data]);\n      setNewMessage(\"\");\n    } catch {\n      console.log(\"error\");\n    }\n  };\n  useEffect(() => {\n    var _chat$members;\n    const userId = chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.find(id => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  // fetching data\n  useEffect(() => {\n    const fetchingMessage = async () => {\n      try {\n        console.log(chat._id);\n        const {\n          data\n        } = await getMessages(chat._id);\n        console.log(data);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) fetchingMessage();\n  }, [chat]);\n  useEffect(() => {\n    console.log(\"Message Arrived: \", receivedMessage);\n    if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\n      setMessages([...messages, receivedMessage]);\n    }\n  }, [receivedMessage]);\n\n  // always scroll to last \n  useEffect(() => {\n    var _scroll$current;\n    (_scroll$current = scroll.current) === null || _scroll$current === void 0 ? void 0 : _scroll$current.scrollIntoView;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox-container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follower\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData !== null && userData !== void 0 && userData.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : Profile,\n                alt: \"Profile\",\n                className: \"followerImage\",\n                style: {\n                  width: \"50px\",\n                  height: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [userData === null || userData === void 0 ? void 0 : userData.firstname, \" \", userData === null || userData === void 0 ? void 0 : userData.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              width: \"95%\",\n              border: \"0.1px solid #ececec\",\n              marginTop: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scroll,\n              className: message.senderId === currentUser ? \"message own\" : \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => imageRef.current.click(),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n            value: newMessage,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-button button\",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbox-empty-message\",\n        children: \"Tap on a chat to start conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBox, \"SE+X7fnoFdAVtS/EkmoUGUFl/q0=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getUser","Profile","addMessage","getMessages","format","InputEmoji","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","chat","currentUser","setSendMessage","receivedMessage","_s","userData","setUserData","messages","setMessages","newMessage","setNewMessage","imageRef","scroll","handleChange","newMsg","handleSend","e","preventDefault","message","senderId","text","chatId","_id","receiverId","members","find","id","data","console","log","_chat$members","userId","getUserData","error","fetchingMessage","_scroll$current","current","scrollIntoView","children","className","src","profilePicture","process","env","REACT_APP_PUBLIC_FOLDER","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","firstname","lastname","border","marginTop","map","ref","createdAt","onClick","click","value","onChange","_c","$RefreshReg$"],"sources":["D:/git projects/SocialMedia/client/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { getUser } from '../../api/userRequest';\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./ChatBox.css\"\r\nimport { addMessage, getMessages } from '../../api/MessageRequest';\r\nimport { format } from \"timeago.js\"\r\nimport InputEmoji from \"react-input-emoji\"\r\n\r\n\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage, receivedMessage }) => {\r\n    const [userData, setUserData] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const imageRef = useRef()\r\n    const scroll = useRef()\r\n\r\n    const handleChange = (newMsg) => {\r\n        setNewMessage(newMsg)\r\n    }\r\n    const handleSend = async (e) => {\r\n        e.preventDefault()\r\n        const message = {\r\n            senderId: currentUser,\r\n            text: newMessage,\r\n            chatId: chat._id,\r\n        }\r\n        const receiverId = chat.members.find((id) => id !== currentUser);\r\n        // send message to socket server\r\n        setSendMessage({ ...message, receiverId })\r\n        // send message to database\r\n        try {\r\n            const { data } = await addMessage(message);\r\n            setMessages([...messages, data]);\r\n            setNewMessage(\"\");\r\n        }\r\n        catch\r\n        {\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = chat?.members?.find((id) => id !== currentUser);\r\n        const getUserData = async () => {\r\n            try {\r\n                const { data } = await getUser(userId);\r\n                setUserData(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) getUserData();\r\n    }, [chat, currentUser])\r\n\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        const fetchingMessage = async () => {\r\n            try {\r\n                console.log(chat._id);\r\n                const { data } = await getMessages(chat._id)\r\n                console.log(data);\r\n                setMessages(data)\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) fetchingMessage();\r\n    }, [chat])\r\n    useEffect(() => {\r\n        console.log(\"Message Arrived: \", receivedMessage)\r\n        if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\r\n            setMessages([...messages, receivedMessage]);\r\n        }\r\n\r\n    }, [receivedMessage])\r\n\r\n    // always scroll to last \r\n    useEffect(()=>{\r\n        scroll.current?.scrollIntoView\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ChatBox-container\">\r\n                {chat ? (\r\n                    <>\r\n                        {/* chat-header */}\r\n                        <div className=\"chat-header\">\r\n                            <div className=\"follower\">\r\n                                <div>\r\n                                    <img\r\n                                        src={\r\n                                            userData?.profilePicture\r\n                                                ? process.env.REACT_APP_PUBLIC_FOLDER +\r\n                                                userData.profilePicture\r\n                                                :\r\n                                                Profile\r\n                                        }\r\n                                        alt=\"Profile\"\r\n                                        className=\"followerImage\"\r\n                                        style={{ width: \"50px\", height: \"50px\" }}\r\n                                    />\r\n                                    <div className=\"name\" style={{ fontSize: \"0.9rem\" }}>\r\n                                        <span>\r\n                                            {userData?.firstname} {userData?.lastname}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr\r\n                                style={{\r\n                                    width: \"95%\",\r\n                                    border: \"0.1px solid #ececec\",\r\n                                    marginTop: \"20px\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {/* chat-body */}\r\n                        <div className=\"chat-body\" >\r\n                            {messages.map((message) => (\r\n                                <>\r\n                                    <div\r\n                                        ref={scroll}\r\n                                        className={\r\n                                            message.senderId === currentUser\r\n                                                ? \"message own\"\r\n                                                : \"message\"\r\n                                        }\r\n                                    >\r\n                                        <span>{message.text}</span>{\" \"}\r\n                                        <span>{format(message.createdAt)}</span>\r\n                                    </div>\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n                        {/* chat-sender */}\r\n                        <div className=\"chat-sender\">\r\n                            <div onClick={() => imageRef.current.click()}>+</div>\r\n                            <InputEmoji\r\n\r\n                                value={newMessage}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"send-button button\" onClick={handleSend}>Send</div>\r\n                        </div>{\" \"}\r\n                    </>\r\n                ) : (\r\n                    <span className=\"chatbox-empty-message\">\r\n                        Tap on a chat to start conversation...\r\n                    </span>\r\n                )}\r\n            </div></>\r\n    )\r\n}\r\n\r\nexport default ChatBox\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}