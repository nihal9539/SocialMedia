{"ast":null,"code":"var _jsxFileName = \"D:\\\\git projects\\\\SocialMedia\\\\client\\\\src\\\\components\\\\Comments\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport \"./CommentSection.css\";\nimport Profile from \"../../img/profileImg.jpg\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getComment } from '../../Action/CommentAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  postId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  let {\n    comments,\n    loading,\n    error\n  } = useSelector(state => state.commentReducer);\n  useEffect(() => {\n    dispatch(getComment(postId));\n  }, [dispatch, postId]);\n  console.log(comments.length);\n  // if (loading) {\n  //     return <div>Loading comments...</div>;\n  //   }\n\n  //   if (error) {\n  //     return <div>Error: {error}</div>;\n  //   }\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    let counter = count;\n    const interval = setInterval(() => {\n      if (counter >= draftedPlayers.length) {\n        clearInterval(interval);\n      } else {\n        setCount(count => count + 1);\n        counter++; // local variable that this closure will see\n      }\n    }, 500);\n    return () => clearInterval(interval);\n  }, [commentSection]);\n  let commentSection = comments.length <= 2 ? \"loading \" : comments === null || comments === void 0 ? void 0 : comments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"firstchild\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondchild\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Mohammed Nihal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment === null || comment === void 0 ? void 0 : comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: commentSection\n  }, void 0, false);\n};\n_s(CommentSection, \"cpWXRuigc74WQu0mDWDAXamTNgI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useEffect","Profile","useDispatch","useSelector","getComment","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentSection","postId","_s","dispatch","comments","loading","error","state","commentReducer","console","log","length","count","setCount","useState","counter","interval","setInterval","draftedPlayers","clearInterval","commentSection","map","comment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/git projects/SocialMedia/client/src/components/Comments/CommentSection.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport \"./CommentSection.css\"\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getComment } from '../../Action/CommentAction'\r\n\r\n\r\n\r\nconst CommentSection = ({ postId }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    let { comments, loading, error } = useSelector((state) => state.commentReducer)\r\n    useEffect(() => {\r\n        dispatch(getComment(postId))\r\n    }, [dispatch, postId])\r\n\r\n    console.log(comments.length);\r\n    // if (loading) {\r\n    //     return <div>Loading comments...</div>;\r\n    //   }\r\n\r\n    //   if (error) {\r\n    //     return <div>Error: {error}</div>;\r\n    //   }\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let counter = count;\r\n        const interval = setInterval(() => {\r\n          if (counter >= draftedPlayers.length) {\r\n            clearInterval(interval);\r\n          } else {\r\n            setCount(count => count + 1);\r\n            counter++; // local variable that this closure will see\r\n          }\r\n        }, 500);\r\n        return () => clearInterval(interval); \r\n      }, [commentSection]);\r\nlet commentSection = comments.length <= 2 ? \"loading \" : comments?.map((comment) => {\r\n    return (\r\n        <div className='commenter'>\r\n            <div className='firstchild'>\r\n                {/* <img src={Profile} alt=\"\" className='commentImage' /> */}\r\n                <div className=\"name\">\r\n                </div>\r\n            </div>\r\n            <div className='secondchild'>\r\n                <span>Mohammed Nihal</span>\r\n                <p>{comment?.comment}</p>\r\n                {/* Lorem ipsum, dolor sit amet consectetur adipisicing elit. Voluptatem ad ipsum suscipit incidunt sed ullam labore culpa minus error amet, recusandae eos, velit laborum eaque, tempore reprehenderit iure aspernatur dolore? */}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n    return (\r\n        <>\r\n            {commentSection}\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CommentSection\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}