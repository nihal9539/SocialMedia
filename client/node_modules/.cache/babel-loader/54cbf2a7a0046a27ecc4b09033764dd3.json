{"ast":null,"code":"var _jsxFileName = \"D:\\\\git projects\\\\SocialMedia\\\\client\\\\src\\\\components\\\\ChatBox\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api/userRequest';\nimport Profile from \"../../img/profileImg.jpg\";\nimport \"./ChatBox.css\";\nimport { getMessages } from '../../api/MessageRequest';\nimport { format } from \"timeago.js\";\nimport InputEmoji from \"react-input-emoji\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat,\n  currentUser,\n  setSendMessage,\n  receivedMessage\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const imageRef = useR;\n  const handleChange = newMsg => {\n    setNewMessage(newMsg);\n  };\n  const handleSend = newMsg => {\n    setNewMessage(newMsg);\n  };\n  useEffect(() => {\n    var _chat$members;\n    const userId = chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.find(id => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  // fetching data\n  useEffect(() => {\n    const fetchingMessage = async () => {\n      try {\n        console.log(chat._id);\n        const {\n          data\n        } = await getMessages(chat._id);\n        console.log(data);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) fetchingMessage();\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox-container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follower\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData !== null && userData !== void 0 && userData.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : Profile,\n                alt: \"Profile\",\n                className: \"followerImage\",\n                style: {\n                  width: \"50px\",\n                  height: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [userData === null || userData === void 0 ? void 0 : userData.firstname, \" \", userData === null || userData === void 0 ? void 0 : userData.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              width: \"95%\",\n              border: \"0.1px solid #ececec\",\n              marginTop: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              // ref={scroll}\n              className: message.senderId === currentUser ? \"message own\" : \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => imageRef.current.click(),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n            value: newMessage,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-button button\",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbox-empty-message\",\n        children: \"Tap on a chat to start conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBox, \"vFYIrp8CgmM+YEa7CAdGnJNoT80=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","getUser","Profile","getMessages","format","InputEmoji","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","chat","currentUser","setSendMessage","receivedMessage","_s","userData","setUserData","messages","setMessages","newMessage","setNewMessage","imageRef","useR","handleChange","newMsg","handleSend","_chat$members","userId","members","find","id","getUserData","data","error","console","log","fetchingMessage","_id","children","className","src","profilePicture","process","env","REACT_APP_PUBLIC_FOLDER","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","firstname","lastname","border","marginTop","map","message","senderId","text","createdAt","onClick","current","click","value","onChange","_c","$RefreshReg$"],"sources":["D:/git projects/SocialMedia/client/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getUser } from '../../api/userRequest';\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./ChatBox.css\"\r\nimport { getMessages } from '../../api/MessageRequest';\r\nimport { format } from \"timeago.js\"\r\nimport InputEmoji from \"react-input-emoji\"\r\n\r\n\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage, receivedMessage }) => {\r\n    const [userData, setUserData] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const imageRef = useR\r\n\r\n    const handleChange = (newMsg) => {\r\n        setNewMessage(newMsg)\r\n    }\r\n    const handleSend = (newMsg) => {\r\n        setNewMessage(newMsg)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = chat?.members?.find((id) => id !== currentUser);\r\n        const getUserData = async () => {\r\n            try {\r\n                const { data } = await getUser(userId);\r\n                setUserData(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) getUserData();\r\n    }, [chat, currentUser])\r\n\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        const fetchingMessage = async () => {\r\n            try {\r\n                console.log(chat._id);\r\n                const { data } = await getMessages(chat._id)\r\n                console.log(data);\r\n                setMessages(data)\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) fetchingMessage();\r\n    }, [chat])\r\n    return (\r\n        <>\r\n            <div className=\"ChatBox-container\">\r\n                {chat ? (\r\n                    <>\r\n                        {/* chat-header */}\r\n                        <div className=\"chat-header\">\r\n                            <div className=\"follower\">\r\n                                <div>\r\n                                    <img\r\n                                        src={\r\n                                            userData?.profilePicture\r\n                                                ? process.env.REACT_APP_PUBLIC_FOLDER +\r\n                                                userData.profilePicture\r\n                                                :\r\n                                                Profile\r\n                                        }\r\n                                        alt=\"Profile\"\r\n                                        className=\"followerImage\"\r\n                                        style={{ width: \"50px\", height: \"50px\" }}\r\n                                    />\r\n                                    <div className=\"name\" style={{ fontSize: \"0.9rem\" }}>\r\n                                        <span>\r\n                                            {userData?.firstname} {userData?.lastname}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr\r\n                                style={{\r\n                                    width: \"95%\",\r\n                                    border: \"0.1px solid #ececec\",\r\n                                    marginTop: \"20px\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {/* chat-body */}\r\n                        <div className=\"chat-body\" >\r\n                            {messages.map((message) => (\r\n                                <>\r\n                                    <div\r\n                                        // ref={scroll}\r\n                                        className={\r\n                                            message.senderId === currentUser\r\n                                                ? \"message own\"\r\n                                                : \"message\"\r\n                                        }\r\n                                    >\r\n                                        <span>{message.text}</span>{\" \"}\r\n                                        <span>{format(message.createdAt)}</span>\r\n                                    </div>\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n                        {/* chat-sender */}\r\n                        <div className=\"chat-sender\">\r\n                            <div onClick={() => imageRef.current.click()}>+</div>\r\n                            <InputEmoji\r\n                            \r\n                                value={newMessage}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"send-button button\" onClick={handleSend}>Send</div>\r\n                            {/* <input\r\n                                type=\"file\"\r\n                                name=\"\"\r\n                                id=\"\"\r\n                                style={{ display: \"none\" }}\r\n                                ref={imageRef}\r\n                            /> */}\r\n                        </div>{\" \"}\r\n                    </>\r\n                ) : (\r\n                    <span className=\"chatbox-empty-message\">\r\n                        Tap on a chat to start conversation...\r\n                    </span>\r\n                )}\r\n            </div></>\r\n    )\r\n}\r\n\r\nexport default ChatBox\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}