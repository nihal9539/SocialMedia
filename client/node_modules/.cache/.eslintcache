[{"D:\\git projects\\SocialMedia\\client\\src\\index.js":"1","D:\\git projects\\SocialMedia\\client\\src\\App.js":"2","D:\\git projects\\SocialMedia\\client\\src\\pages\\Home\\Home.jsx":"3","D:\\git projects\\SocialMedia\\client\\src\\components\\Profile\\Profile.jsx":"4","D:\\git projects\\SocialMedia\\client\\src\\components\\LogoSearch\\LogoSearch.jsx":"5","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileCard\\ProfileCard.jsx":"6","D:\\git projects\\SocialMedia\\client\\src\\components\\FollowersCard\\FollowersCard.jsx":"7","D:\\git projects\\SocialMedia\\client\\src\\data\\followersData.js":"8","D:\\git projects\\SocialMedia\\client\\src\\components\\PostSide\\PostSide.jsx":"9","D:\\git projects\\SocialMedia\\client\\src\\components\\PostShare\\PostShare.jsx":"10","D:\\git projects\\SocialMedia\\client\\src\\components\\Posts\\Posts.jsx":"11","D:\\git projects\\SocialMedia\\client\\src\\data\\Posts.js":"12","D:\\git projects\\SocialMedia\\client\\src\\components\\Post\\Post.jsx":"13","D:\\git projects\\SocialMedia\\client\\src\\components\\RightSide\\RightSide.jsx":"14","D:\\git projects\\SocialMedia\\client\\src\\components\\TrendCard\\TrendCard.jsx":"15","D:\\git projects\\SocialMedia\\client\\src\\data\\TrendCardData.js":"16","D:\\git projects\\SocialMedia\\client\\src\\pages\\Profile\\Profile.jsx":"17","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx":"18","D:\\git projects\\SocialMedia\\client\\src\\components\\InfoCard\\InfoCard.jsx":"19","D:\\git projects\\SocialMedia\\client\\src\\pages\\Auth\\Auth.jsx":"20","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileModel\\ProfileModel.jsx":"21","D:\\git projects\\SocialMedia\\client\\src\\components\\ShareModel\\ShareModel.jsx":"22","D:\\git projects\\SocialMedia\\client\\src\\Action\\AuthAction.js":"23","D:\\git projects\\SocialMedia\\client\\src\\api\\AuthRequest.js":"24","D:\\git projects\\SocialMedia\\client\\src\\store\\reduxStore.js":"25","D:\\git projects\\SocialMedia\\client\\src\\reducer\\index.js":"26","D:\\git projects\\SocialMedia\\client\\src\\reducer\\AuthReducer.js":"27","D:\\git projects\\SocialMedia\\client\\src\\Action\\uploadAction.js":"28","D:\\git projects\\SocialMedia\\client\\src\\api\\uploadRequest.js":"29","D:\\git projects\\SocialMedia\\client\\src\\reducer\\postReducer.js":"30","D:\\git projects\\SocialMedia\\client\\src\\Action\\postAction.js":"31","D:\\git projects\\SocialMedia\\client\\src\\api\\postRequest.js":"32","D:\\git projects\\SocialMedia\\client\\src\\api\\userRequest.js":"33","D:\\git projects\\SocialMedia\\client\\src\\Action\\userAction.js":"34","D:\\git projects\\SocialMedia\\client\\src\\components\\User\\User.jsx":"35","D:\\git projects\\SocialMedia\\client\\src\\pages\\chat\\chat.jsx":"36","D:\\git projects\\SocialMedia\\client\\src\\api\\ChatRequesst.js":"37","D:\\git projects\\SocialMedia\\client\\src\\components\\Conversation\\Conversation.jsx":"38","D:\\git projects\\SocialMedia\\client\\src\\components\\NavIcons\\NavIcons.jsx":"39","D:\\git projects\\SocialMedia\\client\\src\\components\\ChatBox\\ChatBox.jsx":"40","D:\\git projects\\SocialMedia\\client\\src\\api\\MessageRequest.js":"41","D:\\git projects\\SocialMedia\\client\\src\\reducer\\CommentReducer.js":"42","D:\\git projects\\SocialMedia\\client\\src\\Action\\CommentAction.js":"43","D:\\git projects\\SocialMedia\\client\\src\\api\\CommentRequest.js":"44","D:\\git projects\\SocialMedia\\client\\src\\components\\Comments\\CommentSection.jsx":"45"},{"size":680,"mtime":1704813985885,"results":"46","hashOfConfig":"47"},{"size":1053,"mtime":1706777682787,"results":"48","hashOfConfig":"47"},{"size":589,"mtime":1707207710220,"results":"49","hashOfConfig":"47"},{"size":506,"mtime":1707207680136,"results":"50","hashOfConfig":"47"},{"size":538,"mtime":1704613958620,"results":"51","hashOfConfig":"47"},{"size":2433,"mtime":1704975044391,"results":"52","hashOfConfig":"47"},{"size":847,"mtime":1707334277588,"results":"53","hashOfConfig":"47"},{"size":456,"mtime":1704616885101,"results":"54","hashOfConfig":"47"},{"size":315,"mtime":1704623575025,"results":"55","hashOfConfig":"47"},{"size":4516,"mtime":1707209101554,"results":"56","hashOfConfig":"47"},{"size":1071,"mtime":1707376209863,"results":"57","hashOfConfig":"47"},{"size":596,"mtime":1704623964811,"results":"58","hashOfConfig":"47"},{"size":4018,"mtime":1707377565912,"results":"59","hashOfConfig":"47"},{"size":813,"mtime":1707209255268,"results":"60","hashOfConfig":"47"},{"size":577,"mtime":1704626349603,"results":"61","hashOfConfig":"47"},{"size":263,"mtime":1704626195350,"results":"62","hashOfConfig":"47"},{"size":773,"mtime":1707207913669,"results":"63","hashOfConfig":"47"},{"size":393,"mtime":1704630356290,"results":"64","hashOfConfig":"47"},{"size":2336,"mtime":1705678631266,"results":"65","hashOfConfig":"47"},{"size":5377,"mtime":1706191243465,"results":"66","hashOfConfig":"47"},{"size":5709,"mtime":1707211290439,"results":"67","hashOfConfig":"47"},{"size":568,"mtime":1705296023569,"results":"68","hashOfConfig":"47"},{"size":799,"mtime":1704991072631,"results":"69","hashOfConfig":"47"},{"size":232,"mtime":1704810658142,"results":"70","hashOfConfig":"47"},{"size":1052,"mtime":1704811026119,"results":"71","hashOfConfig":"47"},{"size":257,"mtime":1707332768429,"results":"72","hashOfConfig":"47"},{"size":1740,"mtime":1704993293128,"results":"73","hashOfConfig":"47"},{"size":628,"mtime":1704964574380,"results":"74","hashOfConfig":"47"},{"size":215,"mtime":1704964604515,"results":"75","hashOfConfig":"47"},{"size":856,"mtime":1707202949312,"results":"76","hashOfConfig":"47"},{"size":397,"mtime":1707380240379,"results":"77","hashOfConfig":"47"},{"size":465,"mtime":1707202721688,"results":"78","hashOfConfig":"47"},{"size":643,"mtime":1704992830140,"results":"79","hashOfConfig":"47"},{"size":726,"mtime":1704974066403,"results":"80","hashOfConfig":"47"},{"size":1354,"mtime":1704975511611,"results":"81","hashOfConfig":"47"},{"size":3397,"mtime":1707201294702,"results":"82","hashOfConfig":"47"},{"size":143,"mtime":1706778690919,"results":"83","hashOfConfig":"47"},{"size":1454,"mtime":1706780866254,"results":"84","hashOfConfig":"47"},{"size":586,"mtime":1706781082967,"results":"85","hashOfConfig":"47"},{"size":6134,"mtime":1707199493208,"results":"86","hashOfConfig":"47"},{"size":220,"mtime":1707156858074,"results":"87","hashOfConfig":"47"},{"size":979,"mtime":1707380194475,"results":"88","hashOfConfig":"47"},{"size":790,"mtime":1707380022591,"results":"89","hashOfConfig":"47"},{"size":222,"mtime":1707334537798,"results":"90","hashOfConfig":"47"},{"size":1310,"mtime":1707379779231,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"u3vaeg",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"95"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"95"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"95"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"95"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"95"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"242"},"D:\\git projects\\SocialMedia\\client\\src\\index.js",[],[],["243","244"],"D:\\git projects\\SocialMedia\\client\\src\\App.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\Home\\Home.jsx",["245","246","247"],[],"import React, { useEffect } from 'react'\r\nimport \"./Home.css\"\r\nimport Profile from '../../components/Profile/Profile'\r\nimport PostSide from '../../components/PostSide/PostSide'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport RightSide from '../../components/RightSide/RightSide'\r\nimport NavIcons from '../../components/NavIcons/NavIcons'\r\n\r\nconst Home = () => {\r\n\r\n\r\n  return (\r\n    <div className='Home'>\r\n      <div className=\"navIcon\">\r\n      <NavIcons/>\r\n      </div>\r\n      <Profile/>\r\n      <PostSide/>\r\n      <RightSide/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\Profile\\Profile.jsx",["248"],[],"import React from 'react'\r\nimport LogoSearch from '../LogoSearch/LogoSearch'\r\nimport ProfileCard from '../ProfileCard/ProfileCard'\r\nimport \"./Profile.css\"\r\nimport FollowersCard from '../FollowersCard/FollowersCard'\r\nimport NavIcons from '../NavIcons/NavIcons'\r\n\r\nconst Profile = () => {\r\n    return (\r\n\r\n        <div className=\"ProfileSlide\">\r\n            <LogoSearch />\r\n            <ProfileCard location=\"homePage\" />\r\n            <FollowersCard />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\LogoSearch\\LogoSearch.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileCard\\ProfileCard.jsx",["249"],[],"import React from 'react'\r\nimport Cover from \"../../img/cover.jpg\"\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./ProfileCard.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, NavLink } from \"react-router-dom\"\r\nconst ProfileCard = ({location}) => {\r\n\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n    const post = useSelector((state) => state.postReducer.posts)\r\n    const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER\r\n  \r\n    return (\r\n        <div className='ProfileCard'>\r\n            <div className=\"ProfileImages\">\r\n                <img src={user.coverPicture ? serverPublic + user.coverPicture : Cover} alt=\"\" />\r\n                <img src={user.profilePicture ? serverPublic + user.profilePicture : Profile} alt=\"\" />\r\n            </div>\r\n            <div className=\"ProfileName\">\r\n                <span>{user.firstname} {user.lastname}</span>\r\n                <span>{user.worksAt ? user.worksAt : \"Write about your self\"}</span>\r\n            </div>\r\n            <div className=\"followStatus\">\r\n                <hr />\r\n                <div>\r\n                    <div className=\"follow\">\r\n                        <span>{user.following.length}</span>\r\n\r\n                        <span>Followings</span>\r\n                    </div>\r\n                    <div className='verticalLine'></div>\r\n                    <div className=\"follow\">\r\n                        <span>{user.followers.length}</span>\r\n\r\n                        <span>Followers</span>\r\n                    </div>\r\n                    {location === \"profilePage\" && (\r\n                        <>\r\n                            <div className=\"verticalLine\"></div>\r\n                            <div className=\"follow\">\r\n                                <span>{post.filter((post)=>post.userId === user._id).length}</span>\r\n\r\n                                <span>Posts</span>\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            {\r\n                location === \"profilePage\" ? \"\" :\r\n                    <span>\r\n                        <Link to={`/profile/${user._id}`} style={{textDecoration:\"none\", color:\"inherit\"}}>\r\n\r\n                            My Profile\r\n                        </Link>\r\n                    </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\FollowersCard\\FollowersCard.jsx",["250"],[],"import React, { useEffect, useState } from 'react'\r\nimport \"./FollowersCard.css\"\r\nimport User from '../User/User.jsx'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllUser } from '../../api/userRequest'\r\n\r\nconst FollowersCard = () => {\r\n  const [persons,setPersons] = useState([])\r\n  const {user} = useSelector((state)=>state.authReducer.authData)\r\n  \r\n  useEffect(()=>{\r\n    const fetchPerson = async()=>{\r\n      const {data} = await getAllUser();\r\n      setPersons(data)\r\n    }\r\n    fetchPerson()\r\n  },[])\r\n  return (\r\n    <div className='FollowersCard'>\r\n      <h3>Who is Following you</h3>\r\n\r\n      {persons.map((person,id)=>{\r\n        if (person._id !== user._id) {\r\n          \r\n          return(\r\n              <User person={person} id={id}/>\r\n          )\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FollowersCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\data\\followersData.js",[],[],["251","252"],"D:\\git projects\\SocialMedia\\client\\src\\components\\PostSide\\PostSide.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\PostShare\\PostShare.jsx",["253"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport \"./PostShare.css\"\r\nimport ProfileImage from \"../../img/profileImg.jpg\"\r\nimport { UilScenery } from \"@iconscout/react-unicons\"\r\nimport { UilPlayCircle } from \"@iconscout/react-unicons\"\r\nimport { UilLocationPoint } from \"@iconscout/react-unicons\"\r\nimport { UilSchedule } from \"@iconscout/react-unicons\"\r\nimport { UilTimes } from \"@iconscout/react-unicons\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uploadImage, uploadPost } from '../../Action/uploadAction'\r\n\r\nconst PostShare = () => {\r\n    const loading = useSelector((state) => state.postReducer.uploading)\r\n    const [image, setImage] = useState(null)\r\n    const imageRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const desc = useRef()\r\n    const user = useSelector((state) => state.authReducer.authData.user)\r\n    const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER\r\n    const onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            let img = event.target.files[0]\r\n            setImage(img)\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setImage(null)\r\n        desc.current.value = null\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newPost = {\r\n            userId: user._id,\r\n            desc: desc.current.value\r\n        }\r\n        if (image) {\r\n            const data = new FormData()\r\n            const fileName = Date.now() + image.name\r\n            data.append(\"name\", fileName)\r\n            data.append(\"file\", image)\r\n            newPost.image = fileName\r\n            console.log(newPost);\r\n            try {\r\n                dispatch(uploadImage(data))\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        dispatch(uploadPost(newPost))\r\n        reset()\r\n    }\r\n    return (\r\n        <div className='PostShare'>\r\n            <div className='PostInput'>\r\n                <img src={user.profilePicture ? serverPublic + user.profilePicture : ProfileImage} alt=\"\" />\r\n                <input\r\n                    ref={desc}\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"What's Happening\" />\r\n            </div>\r\n            <div className='optionInput'>\r\n\r\n                <div className=\"PostOption\">\r\n                    <div className=\"option\"\r\n                        onClick={() => imageRef.current.click()}\r\n                        style={{ color: \"var(--photo)\" }}\r\n                    >\r\n                        <UilScenery />\r\n                        <span>\r\n\r\n                            Photo\r\n                        </span>\r\n                    </div >\r\n                    <div style={{ color: \"var(--vide0)\" }}\r\n                        className=\"option\">\r\n                        <UilPlayCircle />\r\n                        <span>\r\n\r\n                            Video\r\n                        </span>\r\n                    </div>\r\n                    <div style={{ color: \"var(--location)\" }}\r\n                        className=\"option\">\r\n                        <UilLocationPoint />\r\n                        <span>\r\n\r\n                            Location\r\n                        </span>\r\n                    </div>\r\n                    <div style={{ color: \"var(--shedule)\" }}\r\n                        className=\"option\">\r\n                        <UilSchedule />\r\n                        <span>\r\n\r\n                            Shedule\r\n                        </span>\r\n                    </div>\r\n                    <button\r\n                        disabled={loading}\r\n                        className='button post-button' onClick={handleSubmit}>\r\n                        {loading ? \"Uploading\" : \"Share\"}\r\n                    </button>\r\n                    <div style={{ display: \"none\" }}>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"MyImage\"\r\n                            ref={imageRef}\r\n                            onChange={onImageChange} />\r\n                    </div>\r\n                </div>\r\n                {image && (\r\n                    <div className=\"previewImage\">\r\n                        <UilTimes onClick={() => setImage(null)} />\r\n                        <img src={URL.createObjectURL(image)} alt=\"\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostShare\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\Posts\\Posts.jsx",["254"],[],"D:\\git projects\\SocialMedia\\client\\src\\data\\Posts.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\Post\\Post.jsx",["255","256","257"],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\RightSide\\RightSide.jsx",["258","259","260","261","262"],[],"import React, { useState } from 'react'\r\nimport \"./RightSide.css\"\r\nimport Home from \"../../img/home.png\"\r\nimport Noti from \"../../img/noti.png\"\r\nimport Comment from \"../../img/comment.png\"\r\nimport { UilSetting } from \"@iconscout/react-unicons\"\r\nimport TrendCard from '../TrendCard/TrendCard'\r\nimport ShareModel from '../ShareModel/ShareModel'\r\nimport { Link } from 'react-router-dom'\r\nimport NavIcons from '../NavIcons/NavIcons'\r\nconst RightSide = () => {\r\n  const [modelOpen, setModelOpen] = useState(false)\r\n\r\n  return (\r\n    <div className='RightSide'>\r\n      <NavIcons/>\r\n      <TrendCard />\r\n      <button onClick={() => setModelOpen(true)} className='button r-button'>Share</button>\r\n      <ShareModel ModelOpene={modelOpen} setModelOpen={setModelOpen} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RightSide\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\TrendCard\\TrendCard.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\data\\TrendCardData.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\Profile\\Profile.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\InfoCard\\InfoCard.jsx",["263"],[],"import React, { useEffect, useState } from 'react'\r\nimport \"./InfoCard.css\"\r\nimport { UilPen } from \"@iconscout/react-unicons\"\r\nimport { ProfileModel } from '../ProfileModel/ProfileModel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as UserApi from \"../../api/userRequest\"\r\nimport { logout } from '../../Action/AuthAction'\r\nconst InfoCard = () => {\r\n    const [modelOpen, setModelOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const profileUserId = params.id\r\n    const [profileUser, setProfileUser] = useState({})\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProfileUsr = async () => {\r\n            if (profileUserId === user._id) {\r\n                setProfileUser(user)\r\n\r\n            } else {\r\n                const profileUser = await UserApi.getUser(profileUserId)\r\n                setProfileUser(profileUser)\r\n\r\n            }\r\n        }\r\n        fetchProfileUsr();\r\n\r\n    }, [user])\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <div className='InfoCard'>\r\n            <div className=\"InfoHead\">\r\n                <h4>Profile Info</h4>\r\n                {user._id === profileUserId\r\n                    ? <div onClick={() => setModelOpen(true)}>\r\n\r\n                        <UilPen width='2rem' height='1.5rem' />\r\n\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n\r\n                <ProfileModel\r\n                    ModelOpene={modelOpen}\r\n                    data={user}\r\n                    setModelOpen={setModelOpen} />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Status : </b></span>\r\n                <span>{profileUser.relationship}</span>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Lives In : </b></span>\r\n                <span>{profileUser.livesIn}</span>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Works At : </b></span>\r\n                <span>{profileUser.worksAt}</span>\r\n            </div>\r\n            <button className='button lgout-button' onClick={handleLogout}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\pages\\Auth\\Auth.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileModel\\ProfileModel.jsx",["264","265","266","267"],[],"import { useDisclosure } from '@mantine/hooks';\r\nimport { Modal, Button } from '@mantine/core';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { uploadImage } from '../../Action/uploadAction';\r\nimport { updateUser } from '../../Action/userAction';\r\nimport \"./ProfileModel.css\"\r\n\r\nexport function ProfileModel({ ModelOpene, setModelOpen, data }) {\r\n    //   const [opened, { open, close }] = useState(false);\r\n    const { password, ...other } = data;\r\n    const [formData, setFormData] = useState(other)\r\n    const [profileImage, setProfileImage] = useState(null)\r\n    const [coverImage, setCoverImage] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.name + e.target.value);\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n    const onImageChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            var img = e.target.files[0]\r\n            e.target.name == \"profileImage\" ? setProfileImage(img) : setCoverImage(img)\r\n        }\r\n    }\r\n    const width = window.innerWidth\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let UserData = formData;\r\n        if (profileImage) {\r\n            const data = new FormData();\r\n            const fileName = Date.now() + profileImage.name;\r\n            data.append(\"name\", fileName);\r\n            data.append(\"file\", profileImage);\r\n            UserData.profilePicture = fileName;\r\n            try {\r\n                console.log(data);\r\n                dispatch(uploadImage(data));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        if (coverImage) {\r\n            const data = new FormData();\r\n            const fileName = Date.now() + coverImage.name;\r\n            data.append(\"name\", fileName);\r\n            data.append(\"file\", coverImage);\r\n            UserData.coverPicture = fileName;\r\n            try {\r\n                console.log(data);\r\n                dispatch(uploadImage(data));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        dispatch(updateUser(params.id, UserData));\r\n        setModelOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal opened={ModelOpene} onClose={() => setModelOpen(false)} style={{\r\n                height:\"100%\"\r\n            }} size={`${width >= 650 ? \"55%\" : \"100%\"}`}  >\r\n                {/* Modal content */}\r\n\r\n                <form action=\"\" className='InfoForms'>\r\n                    <h3>Your Info</h3>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            className='InfoInput'\r\n                            placeholder='First Name'\r\n                            onChange={handleChange}\r\n                            value={formData.firstname}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.lastname}\r\n\r\n                            placeholder='Last Name'\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"worksAt\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.worksAt}\r\n\r\n                            placeholder='First Name'\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"livesIn\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.livesIn}\r\n\r\n                            placeholder='Lives In'\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.country}\r\n\r\n                            placeholder='Country'\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"relationship\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.relationship}\r\n\r\n                            placeholder='Relationship Status'\r\n                        />\r\n\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        Profile Image\r\n                        <input type=\"file\" name=\"profileImage\" onChange={onImageChange} />\r\n\r\n                        Cover Image\r\n                        <input type=\"file\" name=\"coverImage\" onChange={onImageChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button className='button fc-button' onClick={handleSubmit}>Update</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n            {/* <Button onClick={open}>Open modal</Button> */}\r\n        </>\r\n    );\r\n}","D:\\git projects\\SocialMedia\\client\\src\\components\\ShareModel\\ShareModel.jsx",["268","269","270"],[],"import { useDisclosure } from '@mantine/hooks';\r\nimport { Modal, Button } from '@mantine/core';\r\nimport { useState } from 'react';\r\nimport PostShare from '../PostShare/PostShare';\r\n\r\n function ShareModel({ ModelOpene, setModelOpen }) {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Modal opened={ModelOpene} onClose={() => setModelOpen(false)} size={'55%'} >\r\n                {/* Modal content */}\r\n\r\n               <PostShare/>\r\n            </Modal>\r\n            {/* <Button onClick={open}>Open modal</Button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShareModel","D:\\git projects\\SocialMedia\\client\\src\\Action\\AuthAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\AuthRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\store\\reduxStore.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\index.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\AuthReducer.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\uploadAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\uploadRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\postReducer.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\postAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\postRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\userRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\userAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\User\\User.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\chat\\chat.jsx",["271","272"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./chat.css\"\r\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userChats } from '../../api/ChatRequesst';\r\nimport Conversation from '../../components/Conversation/Conversation';\r\nimport NavIcons from '../../components/NavIcons/NavIcons';\r\nimport ChatBox from '../../components/ChatBox/ChatBox';\r\nimport { io } from \"socket.io-client\"\r\nconst Chat = () => {\r\n\r\n    // const dispatch = useDispatch();\r\n    const socket = useRef();\r\n    const { user } = useSelector((state) => state.authReducer.authData);\r\n    const [chats, setChats] = useState([]);\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [sendMessage, setSendMessage] = useState(null);\r\n    const [receivedMessage, setReceivedMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"ws://localhost/8800\")\r\n        socket.current.emit('new-user-add', user._id)\r\n        socket.current.on(\"get-users\", (users) => {\r\n            setOnlineUsers(users)\r\n        })\r\n    }, [user])\r\n\r\n    // send message to socket server\r\n    useEffect(() => {\r\n\r\n        socket.current.emit('send-message', sendMessage)\r\n    }, [sendMessage])\r\n\r\n    // recieve message\r\n    useEffect(() => {\r\n\r\n        socket.current.on('receive-message', (data) => {\r\n            console.log(data);\r\n            setReceivedMessage(data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const getChats = async () => {\r\n            try {\r\n                const { data } = await userChats(user._id);\r\n                setChats(data);\r\n                console.log(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        getChats();\r\n    }, [user._id]);\r\n\r\n\r\n    return (\r\n        <div className=\"Chat\">\r\n            {/* Left Side */}\r\n            <div className=\"Left-side-chat\">\r\n                <LogoSearch />\r\n                <div className=\"Chat-container\">\r\n                    <h2>Chats</h2>\r\n                    <div className=\"Chat-list\">\r\n                        {chats.map((chat) => (\r\n                            <div\r\n                                onClick={() => {\r\n                                    setCurrentChat(chat);\r\n                                }}\r\n                            >\r\n\r\n                                <Conversation\r\n                                    data={chat}\r\n                                    currentUser={user._id}\r\n                                // online={checkOnlineStatus(chat)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Right Side */}\r\n\r\n            <div className=\"Right-side-chat\">\r\n                <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\r\n                    <NavIcons />\r\n                </div>\r\n                {/* chat body */}\r\n                <ChatBox\r\n                    chat={currentChat}\r\n                    currentUser={user._id}\r\n                    setSendMessage={setSendMessage}\r\n                    receivedMessage={receivedMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\git projects\\SocialMedia\\client\\src\\api\\ChatRequesst.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\Conversation\\Conversation.jsx",["273"],[],"import React, { useEffect, useState } from 'react'\r\nimport { getUser } from '../../api/userRequest'\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./Conversation.css\"\r\nconst Conversation = ({ data, currentUser }) => {\r\n    const [userData, setUserData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const userId = data.members.find((id) => id !== currentUser)\r\n        const getUserData = async () => {\r\n            try {\r\n\r\n\r\n                const { data } = await getUser(userId)\r\n                setUserData(data)\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getUserData()\r\n    }, [])\r\n    return (\r\n        <>\r\n        <div className='follower conversation'>\r\n            <div className='chatlist'>\r\n                <div>\r\n                    <div className='online-dot' >\r\n                    </div>\r\n                    <img src={userData?.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : Profile} className='image' alt=\"\" />\r\n                </div>\r\n                <div className='name' style={{ fontSize: \"0.8rem\" }}>\r\n                    <span>{userData?.firstName}  {userData?.lastname}</span>\r\n                    <span className='online'>Online</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <hr style={{width:'85%', border:\"0.1px solid #ececec\"}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Conversation\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\NavIcons\\NavIcons.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ChatBox\\ChatBox.jsx",["274"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { getUser } from '../../api/userRequest';\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./ChatBox.css\"\r\nimport { addMessage, getMessages } from '../../api/MessageRequest';\r\nimport { format } from \"timeago.js\"\r\nimport InputEmoji from \"react-input-emoji\"\r\n\r\n\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage, receivedMessage }) => {\r\n    const [userData, setUserData] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const imageRef = useRef()\r\n    const scroll = useRef()\r\n\r\n    const handleChange = (newMsg) => {\r\n        setNewMessage(newMsg)\r\n    }\r\n    const handleSend = async (e) => {\r\n        e.preventDefault()\r\n        const message = {\r\n            senderId: currentUser,\r\n            text: newMessage,\r\n            chatId: chat._id,\r\n        }\r\n        const receiverId = chat.members.find((id) => id !== currentUser);\r\n        // send message to socket server\r\n        setSendMessage({ ...message, receiverId })\r\n        // send message to database\r\n        try {\r\n            const { data } = await addMessage(message);\r\n            setMessages([...messages, data]);\r\n            setNewMessage(\"\");\r\n        }\r\n        catch\r\n        {\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = chat?.members?.find((id) => id !== currentUser);\r\n        const getUserData = async () => {\r\n            try {\r\n                const { data } = await getUser(userId);\r\n                setUserData(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) getUserData();\r\n    }, [chat, currentUser])\r\n\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        const fetchingMessage = async () => {\r\n            try {\r\n                console.log(chat._id);\r\n                const { data } = await getMessages(chat._id)\r\n                console.log(data);\r\n                setMessages(data)\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        if (chat !== null) fetchingMessage();\r\n    }, [chat])\r\n    useEffect(() => {\r\n        console.log(\"Message Arrived: \", receivedMessage)\r\n        if (receivedMessage !== null && receivedMessage.chatId === chat._id) {\r\n            setMessages([...messages, receivedMessage]);\r\n        }\r\n\r\n    }, [receivedMessage])\r\n\r\n    // always scroll to last \r\n    useEffect(()=>{\r\n        scroll.current?.scrollIntoView({behavioe:\"smooth\"})\r\n    },[messages])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ChatBox-container\">\r\n                {chat ? (\r\n                    <>\r\n                        {/* chat-header */}\r\n                        <div className=\"chat-header\">\r\n                            <div className=\"follower\">\r\n                                <div>\r\n                                    <img\r\n                                        src={\r\n                                            userData?.profilePicture\r\n                                                ? process.env.REACT_APP_PUBLIC_FOLDER +\r\n                                                userData.profilePicture\r\n                                                :\r\n                                                Profile\r\n                                        }\r\n                                        alt=\"Profile\"\r\n                                        className=\"followerImage\"\r\n                                        style={{ width: \"50px\", height: \"50px\" }}\r\n                                    />\r\n                                    <div className=\"name\" style={{ fontSize: \"0.9rem\" }}>\r\n                                        <span>\r\n                                            {userData?.firstname} {userData?.lastname}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr\r\n                                style={{\r\n                                    width: \"95%\",\r\n                                    border: \"0.1px solid #ececec\",\r\n                                    marginTop: \"20px\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {/* chat-body */}\r\n                        <div className=\"chat-body\" >\r\n                            {messages.map((message) => (\r\n                                <>\r\n                                    <div\r\n                                        ref={scroll}\r\n                                        className={\r\n                                            message.senderId === currentUser\r\n                                                ? \"message own\"\r\n                                                : \"message\"\r\n                                        }\r\n                                    >\r\n                                        <span>{message.text}</span>{\" \"}\r\n                                        <span>{format(message.createdAt)}</span>\r\n                                    </div>\r\n                                </>\r\n                            ))}\r\n                        </div>\r\n                        {/* chat-sender */}\r\n                        <div className=\"chat-sender\">\r\n                            <div onClick={() => imageRef.current.click()}>+</div>\r\n                            <InputEmoji\r\n\r\n                                value={newMessage}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className=\"send-button button\" onClick={handleSend}>Send</div>\r\n                        </div>{\" \"}\r\n                    </>\r\n                ) : (\r\n                    <span className=\"chatbox-empty-message\">\r\n                        Tap on a chat to start conversation...\r\n                    </span>\r\n                )}\r\n            </div></>\r\n    )\r\n}\r\n\r\nexport default ChatBox\r\n","D:\\git projects\\SocialMedia\\client\\src\\api\\MessageRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\CommentReducer.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\CommentAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\CommentRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\Comments\\CommentSection.jsx",["275","276","277"],[],"import React, { useEffect } from 'react'\r\nimport \"./CommentSection.css\"\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getComment } from '../../Action/CommentAction'\r\n\r\n\r\n\r\nconst CommentSection = ({ postId }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    let { comments, loading, error } = useSelector((state) => state.commentReducer)\r\n    useEffect(() => {\r\n        dispatch(getComment(postId))\r\n    }, [dispatch, postId])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {comments.length == 0 || comments.constructor !== Array ? \"No comment\" : comments?.map((comment) => {\r\n                return (\r\n                    <div className='commenter'>\r\n                        <div className='firstchild'>\r\n                            <img src={Profile} alt=\"\" className='commentImage' />\r\n                            <div className=\"name\">\r\n                            </div>\r\n                        </div>\r\n                        <div className='secondchild'>\r\n                            <span>Mohammed Nihal</span>\r\n                            <p>{comment?.comment}</p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                )\r\n\r\n            })}\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CommentSection\r\n",["278","279"],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":26},{"ruleId":"284","severity":1,"message":"288","line":5,"column":9,"nodeType":"286","messageId":"287","endLine":5,"endColumn":20},{"ruleId":"284","severity":1,"message":"289","line":5,"column":22,"nodeType":"286","messageId":"287","endLine":5,"endColumn":33},{"ruleId":"284","severity":1,"message":"290","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":16},{"ruleId":"284","severity":1,"message":"291","line":6,"column":16,"nodeType":"286","messageId":"287","endLine":6,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":22,"column":31,"nodeType":"294","messageId":"295","endLine":22,"endColumn":33},{"ruleId":"280","replacedBy":"296"},{"ruleId":"282","replacedBy":"297"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":35,"nodeType":"286","messageId":"287","endLine":1,"endColumn":44},{"ruleId":"298","severity":1,"message":"299","line":16,"column":8,"nodeType":"300","endLine":16,"endColumn":10,"suggestions":"301"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":26},{"ruleId":"284","severity":1,"message":"302","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":15},{"ruleId":"284","severity":1,"message":"303","line":11,"column":25,"nodeType":"286","messageId":"287","endLine":11,"endColumn":35},{"ruleId":"284","severity":1,"message":"304","line":3,"column":8,"nodeType":"286","messageId":"287","endLine":3,"endColumn":12},{"ruleId":"284","severity":1,"message":"305","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":12},{"ruleId":"284","severity":1,"message":"306","line":5,"column":8,"nodeType":"286","messageId":"287","endLine":5,"endColumn":15},{"ruleId":"284","severity":1,"message":"307","line":6,"column":10,"nodeType":"286","messageId":"287","endLine":6,"endColumn":20},{"ruleId":"284","severity":1,"message":"308","line":9,"column":10,"nodeType":"286","messageId":"287","endLine":9,"endColumn":14},{"ruleId":"298","severity":1,"message":"309","line":31,"column":8,"nodeType":"300","endLine":31,"endColumn":14,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"311","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":23},{"ruleId":"284","severity":1,"message":"312","line":2,"column":17,"nodeType":"286","messageId":"287","endLine":2,"endColumn":23},{"ruleId":"284","severity":1,"message":"313","line":18,"column":13,"nodeType":"286","messageId":"287","endLine":18,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":27,"column":27,"nodeType":"316","messageId":"317","endLine":27,"endColumn":29},{"ruleId":"284","severity":1,"message":"311","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":23},{"ruleId":"284","severity":1,"message":"312","line":2,"column":17,"nodeType":"286","messageId":"287","endLine":2,"endColumn":23},{"ruleId":"284","severity":1,"message":"318","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":18},{"ruleId":"284","severity":1,"message":"289","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":21},{"ruleId":"284","severity":1,"message":"319","line":16,"column":12,"nodeType":"286","messageId":"287","endLine":16,"endColumn":23},{"ruleId":"298","severity":1,"message":"320","line":21,"column":8,"nodeType":"300","endLine":21,"endColumn":10,"suggestions":"321"},{"ruleId":"298","severity":1,"message":"322","line":83,"column":8,"nodeType":"300","endLine":83,"endColumn":25,"suggestions":"323"},{"ruleId":"284","severity":1,"message":"324","line":12,"column":21,"nodeType":"286","messageId":"287","endLine":12,"endColumn":28},{"ruleId":"284","severity":1,"message":"325","line":12,"column":30,"nodeType":"286","messageId":"287","endLine":12,"endColumn":35},{"ruleId":"314","severity":1,"message":"315","line":23,"column":30,"nodeType":"316","messageId":"317","endLine":23,"endColumn":32},{"ruleId":"280","replacedBy":"326"},{"ruleId":"282","replacedBy":"327"},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'NavIcons' is defined but never used.","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["328"],["329"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.","ArrayExpression",["330"],"'Profile' is defined but never used.","'getComment' is defined but never used.","'Home' is defined but never used.","'Noti' is defined but never used.","'Comment' is defined but never used.","'UilSetting' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'profileUserId'. Either include it or remove the dependency array.",["331"],"'useDisclosure' is defined but never used.","'Button' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'onlineUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'data.members'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has missing dependencies: 'chat._id' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["333"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["328"],["329"],"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"342","text":"343"},"Update the dependencies array to be: [profileUserId, user]",{"range":"344","text":"345"},"Update the dependencies array to be: [currentUser, data.members]",{"range":"346","text":"347"},"Update the dependencies array to be: [chat._id, messages, receivedMessage]",{"range":"348","text":"349"},[576,578],"[dispatch, user._id]",[1073,1079],"[profileUserId, user]",[657,659],"[currentUser, data.members]",[2483,2500],"[chat._id, messages, receivedMessage]"]