[{"D:\\git projects\\SocialMedia\\client\\src\\index.js":"1","D:\\git projects\\SocialMedia\\client\\src\\App.js":"2","D:\\git projects\\SocialMedia\\client\\src\\pages\\Home\\Home.jsx":"3","D:\\git projects\\SocialMedia\\client\\src\\components\\Profile\\Profile.jsx":"4","D:\\git projects\\SocialMedia\\client\\src\\components\\LogoSearch\\LogoSearch.jsx":"5","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileCard\\ProfileCard.jsx":"6","D:\\git projects\\SocialMedia\\client\\src\\components\\FollowersCard\\FollowersCard.jsx":"7","D:\\git projects\\SocialMedia\\client\\src\\data\\followersData.js":"8","D:\\git projects\\SocialMedia\\client\\src\\components\\PostSide\\PostSide.jsx":"9","D:\\git projects\\SocialMedia\\client\\src\\components\\PostShare\\PostShare.jsx":"10","D:\\git projects\\SocialMedia\\client\\src\\components\\Posts\\Posts.jsx":"11","D:\\git projects\\SocialMedia\\client\\src\\data\\Posts.js":"12","D:\\git projects\\SocialMedia\\client\\src\\components\\Post\\Post.jsx":"13","D:\\git projects\\SocialMedia\\client\\src\\components\\RightSide\\RightSide.jsx":"14","D:\\git projects\\SocialMedia\\client\\src\\components\\TrendCard\\TrendCard.jsx":"15","D:\\git projects\\SocialMedia\\client\\src\\data\\TrendCardData.js":"16","D:\\git projects\\SocialMedia\\client\\src\\pages\\Profile\\Profile.jsx":"17","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx":"18","D:\\git projects\\SocialMedia\\client\\src\\components\\InfoCard\\InfoCard.jsx":"19","D:\\git projects\\SocialMedia\\client\\src\\pages\\Auth\\Auth.jsx":"20","D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileModel\\ProfileModel.jsx":"21","D:\\git projects\\SocialMedia\\client\\src\\components\\ShareModel\\ShareModel.jsx":"22","D:\\git projects\\SocialMedia\\client\\src\\Action\\AuthAction.js":"23","D:\\git projects\\SocialMedia\\client\\src\\api\\AuthRequest.js":"24","D:\\git projects\\SocialMedia\\client\\src\\store\\reduxStore.js":"25","D:\\git projects\\SocialMedia\\client\\src\\reducer\\index.js":"26","D:\\git projects\\SocialMedia\\client\\src\\reducer\\AuthReducer.js":"27","D:\\git projects\\SocialMedia\\client\\src\\Action\\uploadAction.js":"28","D:\\git projects\\SocialMedia\\client\\src\\api\\uploadRequest.js":"29","D:\\git projects\\SocialMedia\\client\\src\\reducer\\postReducer.js":"30","D:\\git projects\\SocialMedia\\client\\src\\Action\\postAction.js":"31","D:\\git projects\\SocialMedia\\client\\src\\api\\postRequest.js":"32","D:\\git projects\\SocialMedia\\client\\src\\api\\userRequest.js":"33","D:\\git projects\\SocialMedia\\client\\src\\Action\\userAction.js":"34","D:\\git projects\\SocialMedia\\client\\src\\components\\User\\User.jsx":"35","D:\\git projects\\SocialMedia\\client\\src\\pages\\chat\\chat.jsx":"36","D:\\git projects\\SocialMedia\\client\\src\\api\\ChatRequesst.js":"37","D:\\git projects\\SocialMedia\\client\\src\\components\\Conversation\\Conversation.jsx":"38","D:\\git projects\\SocialMedia\\client\\src\\components\\NavIcons\\NavIcons.jsx":"39","D:\\git projects\\SocialMedia\\client\\src\\components\\ChatBox\\ChatBox.jsx":"40","D:\\git projects\\SocialMedia\\client\\src\\api\\MessageRequest.js":"41"},{"size":680,"mtime":1704813985885,"results":"42","hashOfConfig":"43"},{"size":1053,"mtime":1706777682787,"results":"44","hashOfConfig":"43"},{"size":464,"mtime":1704885225509,"results":"45","hashOfConfig":"43"},{"size":461,"mtime":1704949038289,"results":"46","hashOfConfig":"43"},{"size":538,"mtime":1704613958620,"results":"47","hashOfConfig":"43"},{"size":2433,"mtime":1704975044391,"results":"48","hashOfConfig":"43"},{"size":930,"mtime":1704992761243,"results":"49","hashOfConfig":"43"},{"size":456,"mtime":1704616885101,"results":"50","hashOfConfig":"43"},{"size":315,"mtime":1704623575025,"results":"51","hashOfConfig":"43"},{"size":4141,"mtime":1705755457291,"results":"52","hashOfConfig":"43"},{"size":1028,"mtime":1704975315054,"results":"53","hashOfConfig":"43"},{"size":596,"mtime":1704623964811,"results":"54","hashOfConfig":"43"},{"size":1418,"mtime":1705690713406,"results":"55","hashOfConfig":"43"},{"size":813,"mtime":1706781116252,"results":"56","hashOfConfig":"43"},{"size":577,"mtime":1704626349603,"results":"57","hashOfConfig":"43"},{"size":263,"mtime":1704626195350,"results":"58","hashOfConfig":"43"},{"size":658,"mtime":1704949050394,"results":"59","hashOfConfig":"43"},{"size":393,"mtime":1704630356290,"results":"60","hashOfConfig":"43"},{"size":2336,"mtime":1705678631266,"results":"61","hashOfConfig":"43"},{"size":5377,"mtime":1706191243465,"results":"62","hashOfConfig":"43"},{"size":5495,"mtime":1704963976782,"results":"63","hashOfConfig":"43"},{"size":568,"mtime":1705296023569,"results":"64","hashOfConfig":"43"},{"size":799,"mtime":1704991072631,"results":"65","hashOfConfig":"43"},{"size":232,"mtime":1704810658142,"results":"66","hashOfConfig":"43"},{"size":1052,"mtime":1704811026119,"results":"67","hashOfConfig":"43"},{"size":194,"mtime":1704877517376,"results":"68","hashOfConfig":"43"},{"size":1740,"mtime":1704993293128,"results":"69","hashOfConfig":"43"},{"size":628,"mtime":1704964574380,"results":"70","hashOfConfig":"43"},{"size":215,"mtime":1704964604515,"results":"71","hashOfConfig":"43"},{"size":494,"mtime":1704969586856,"results":"72","hashOfConfig":"43"},{"size":406,"mtime":1704969719781,"results":"73","hashOfConfig":"43"},{"size":249,"mtime":1704903364240,"results":"74","hashOfConfig":"43"},{"size":643,"mtime":1704992830140,"results":"75","hashOfConfig":"43"},{"size":726,"mtime":1704974066403,"results":"76","hashOfConfig":"43"},{"size":1354,"mtime":1704975511611,"results":"77","hashOfConfig":"43"},{"size":3397,"mtime":1707201294702,"results":"78","hashOfConfig":"43"},{"size":143,"mtime":1706778690919,"results":"79","hashOfConfig":"43"},{"size":1454,"mtime":1706780866254,"results":"80","hashOfConfig":"43"},{"size":586,"mtime":1706781082967,"results":"81","hashOfConfig":"43"},{"size":6134,"mtime":1707199493208,"results":"82","hashOfConfig":"43"},{"size":220,"mtime":1707156858074,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"u3vaeg",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"87"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"87"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git projects\\SocialMedia\\client\\src\\index.js",[],[],["219","220"],"D:\\git projects\\SocialMedia\\client\\src\\App.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\Home\\Home.jsx",["221","222","223"],[],"import React, { useEffect } from 'react'\r\nimport \"./Home.css\"\r\nimport Profile from '../../components/Profile/Profile'\r\nimport PostSide from '../../components/PostSide/PostSide'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport RightSide from '../../components/RightSide/RightSide'\r\n\r\nconst Home = () => {\r\n\r\n\r\n  return (\r\n    <div className='Home'>\r\n      <Profile/>\r\n      <PostSide/>\r\n      <RightSide/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\Profile\\Profile.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\LogoSearch\\LogoSearch.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileCard\\ProfileCard.jsx",["224"],[],"import React from 'react'\r\nimport Cover from \"../../img/cover.jpg\"\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./ProfileCard.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, NavLink } from \"react-router-dom\"\r\nconst ProfileCard = ({location}) => {\r\n\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n    const post = useSelector((state) => state.postReducer.posts)\r\n    const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER\r\n  \r\n    return (\r\n        <div className='ProfileCard'>\r\n            <div className=\"ProfileImages\">\r\n                <img src={user.coverPicture ? serverPublic + user.coverPicture : Cover} alt=\"\" />\r\n                <img src={user.profilePicture ? serverPublic + user.profilePicture : Profile} alt=\"\" />\r\n            </div>\r\n            <div className=\"ProfileName\">\r\n                <span>{user.firstname} {user.lastname}</span>\r\n                <span>{user.worksAt ? user.worksAt : \"Write about your self\"}</span>\r\n            </div>\r\n            <div className=\"followStatus\">\r\n                <hr />\r\n                <div>\r\n                    <div className=\"follow\">\r\n                        <span>{user.following.length}</span>\r\n\r\n                        <span>Followings</span>\r\n                    </div>\r\n                    <div className='verticalLine'></div>\r\n                    <div className=\"follow\">\r\n                        <span>{user.followers.length}</span>\r\n\r\n                        <span>Followers</span>\r\n                    </div>\r\n                    {location === \"profilePage\" && (\r\n                        <>\r\n                            <div className=\"verticalLine\"></div>\r\n                            <div className=\"follow\">\r\n                                <span>{post.filter((post)=>post.userId === user._id).length}</span>\r\n\r\n                                <span>Posts</span>\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            {\r\n                location === \"profilePage\" ? \"\" :\r\n                    <span>\r\n                        <Link to={`/profile/${user._id}`} style={{textDecoration:\"none\", color:\"inherit\"}}>\r\n\r\n                            My Profile\r\n                        </Link>\r\n                    </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\FollowersCard\\FollowersCard.jsx",["225"],[],"import React, { useEffect, useState } from 'react'\r\nimport \"./FollowersCard.css\"\r\nimport User from '../User/User.jsx'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllUser } from '../../api/userRequest'\r\n\r\nconst FollowersCard = () => {\r\n  const [persons,setPersons] = useState([])\r\n  const {user} = useSelector((state)=>state.authReducer.authData)\r\n  \r\n  useEffect(()=>{\r\n    const fetchPerson = async()=>{\r\n      console.log(\"data\");\r\n      const {data} = await getAllUser();\r\n      setPersons(data)\r\n    }\r\n    fetchPerson()\r\n  },[])\r\n  console.log(persons);\r\n  return (\r\n    <div className='FollowersCard'>\r\n      <h3>Who is Following you</h3>\r\n\r\n      {persons.map((person,id)=>{\r\n        console.log(person);\r\n        if (person._id !== user._id) {\r\n          \r\n          return(\r\n              <User person={person} id={id}/>\r\n          )\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FollowersCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\data\\followersData.js",[],[],["226","227"],"D:\\git projects\\SocialMedia\\client\\src\\components\\PostSide\\PostSide.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\PostShare\\PostShare.jsx",["228"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport \"./PostShare.css\"\r\nimport ProfileImage from \"../../img/profileImg.jpg\"\r\nimport { UilScenery } from \"@iconscout/react-unicons\"\r\nimport { UilPlayCircle } from \"@iconscout/react-unicons\"\r\nimport { UilLocationPoint } from \"@iconscout/react-unicons\"\r\nimport { UilSchedule } from \"@iconscout/react-unicons\"\r\nimport { UilTimes } from \"@iconscout/react-unicons\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uploadImage, uploadPost } from '../../Action/uploadAction'\r\n\r\nconst PostShare = () => {\r\n    const loading = useSelector((state) => state.postReducer.uploading)\r\n    const [image, setImage] = useState(null)\r\n    const imageRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const desc = useRef()\r\n    const user = useSelector((state) => state.authReducer.authData.user)\r\n    const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER\r\n    const onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            let img = event.target.files[0]\r\n            setImage(img)\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setImage(null)\r\n        desc.current.value = null\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newPost = {\r\n            userId: user._id,\r\n            desc: desc.current.value\r\n        }\r\n        if (image) {\r\n            const data = new FormData()\r\n            const fileName = Date.now() + image.name\r\n            data.append(\"name\", fileName)\r\n            data.append(\"file\", image)\r\n            newPost.image = fileName\r\n            console.log(newPost);\r\n            try {\r\n                dispatch(uploadImage(data))\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        dispatch(uploadPost(newPost))\r\n        reset()\r\n    }\r\n    return (\r\n        <div className='PostShare'>\r\n            <img src={user.profilePicture ? serverPublic + user.profilePicture : ProfileImage} alt=\"\" />\r\n            <div>\r\n                <input\r\n                    ref={desc}\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"What's Happening\" />\r\n                <div className=\"PostOption\">\r\n                    <div className=\"option\"\r\n                        onClick={() => imageRef.current.click()}\r\n                        style={{ color: \"var(--photo)\" }}\r\n                    >\r\n                        <UilScenery />\r\n                        Photo\r\n                    </div >\r\n                    <div style={{ color: \"var(--vide0)\" }}\r\n                        className=\"option\">\r\n                        <UilPlayCircle />\r\n                        Video\r\n                    </div>\r\n                    <div style={{ color: \"var(--location)\" }}\r\n                        className=\"option\">\r\n                        <UilLocationPoint />\r\n                        Location\r\n                    </div>\r\n                    <div style={{ color: \"var(--shedule)\" }}\r\n                        className=\"option\">\r\n                        <UilSchedule />\r\n                        Shedule\r\n                    </div>\r\n                    <button\r\n                        disabled={loading}\r\n                        className='button post-button' onClick={handleSubmit}>\r\n                        {loading ? \"Uploading\" : \"Share\"}\r\n                    </button>\r\n                    <div style={{ display: \"none\" }}>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"MyImage\"\r\n                            ref={imageRef}\r\n                            onChange={onImageChange} />\r\n                    </div>\r\n                </div>\r\n                {image && (\r\n                    <div className=\"previewImage\">\r\n                        <UilTimes onClick={() => setImage(null)} />\r\n                        <img src={URL.createObjectURL(image)} alt=\"\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostShare\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\Posts\\Posts.jsx",["229"],[],"import React, { useEffect } from 'react'\r\nimport \"./Posts.css\"\r\nimport Post from '../Post/Post'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getTimeLinePosts } from '../../Action/postAction'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst Posts = () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams()\r\n    const {user} = useSelector((state)=>state.authReducer.authData)\r\n    let {posts,loading} = useSelector((state)=>state.postReducer)\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(getTimeLinePosts(user._id))\r\n    },[])\r\n    if(!posts) return \"No Posts\"\r\n    if(useParams.id) posts = posts.filter((post)=>post.userId === params.id)\r\n    return (\r\n        <div className='Posts'>\r\n            {\r\n            loading ? \"Fetching post\":\r\n            posts.map((post, id) => {\r\n                return (\r\n                    <Post data={post} id={id}/>\r\n                    // <div>hi</div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","D:\\git projects\\SocialMedia\\client\\src\\data\\Posts.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\Post\\Post.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\RightSide\\RightSide.jsx",["230","231","232","233","234"],[],"import React, { useState } from 'react'\r\nimport \"./RightSide.css\"\r\nimport Home from \"../../img/home.png\"\r\nimport Noti from \"../../img/noti.png\"\r\nimport Comment from \"../../img/comment.png\"\r\nimport { UilSetting } from \"@iconscout/react-unicons\"\r\nimport TrendCard from '../TrendCard/TrendCard'\r\nimport ShareModel from '../ShareModel/ShareModel'\r\nimport { Link } from 'react-router-dom'\r\nimport NavIcons from '../NavIcons/NavIcons'\r\nconst RightSide = () => {\r\n  const [modelOpen, setModelOpen] = useState(false)\r\n\r\n  return (\r\n    <div className='RightSide'>\r\n      <NavIcons/>\r\n      <TrendCard />\r\n      <button onClick={() => setModelOpen(true)} className='button r-button'>Share</button>\r\n      <ShareModel ModelOpene={modelOpen} setModelOpen={setModelOpen} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RightSide\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\TrendCard\\TrendCard.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\data\\TrendCardData.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\Profile\\Profile.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileLeft\\ProfileLeft.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\InfoCard\\InfoCard.jsx",["235"],[],"import React, { useEffect, useState } from 'react'\r\nimport \"./InfoCard.css\"\r\nimport { UilPen } from \"@iconscout/react-unicons\"\r\nimport { ProfileModel } from '../ProfileModel/ProfileModel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport * as UserApi from \"../../api/userRequest\"\r\nimport { logout } from '../../Action/AuthAction'\r\nconst InfoCard = () => {\r\n    const [modelOpen, setModelOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const profileUserId = params.id\r\n    const [profileUser, setProfileUser] = useState({})\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProfileUsr = async () => {\r\n            if (profileUserId === user._id) {\r\n                setProfileUser(user)\r\n\r\n            } else {\r\n                const profileUser = await UserApi.getUser(profileUserId)\r\n                setProfileUser(profileUser)\r\n\r\n            }\r\n        }\r\n        fetchProfileUsr();\r\n\r\n    }, [user])\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <div className='InfoCard'>\r\n            <div className=\"InfoHead\">\r\n                <h4>Profile Info</h4>\r\n                {user._id === profileUserId\r\n                    ? <div onClick={() => setModelOpen(true)}>\r\n\r\n                        <UilPen width='2rem' height='1.5rem' />\r\n\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n\r\n                <ProfileModel\r\n                    ModelOpene={modelOpen}\r\n                    data={user}\r\n                    setModelOpen={setModelOpen} />\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Status : </b></span>\r\n                <span>{profileUser.relationship}</span>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Lives In : </b></span>\r\n                <span>{profileUser.livesIn}</span>\r\n            </div>\r\n            <div className=\"info\">\r\n                <span><b>Works At : </b></span>\r\n                <span>{profileUser.worksAt}</span>\r\n            </div>\r\n            <button className='button lgout-button' onClick={handleLogout}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","D:\\git projects\\SocialMedia\\client\\src\\pages\\Auth\\Auth.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ProfileModel\\ProfileModel.jsx",["236","237","238","239"],[],"import { useDisclosure } from '@mantine/hooks';\r\nimport { Modal, Button } from '@mantine/core';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { uploadImage } from '../../Action/uploadAction';\r\nimport { updateUser } from '../../Action/userAction';\r\n\r\nexport function ProfileModel({ ModelOpene, setModelOpen, data }) {\r\n    //   const [opened, { open, close }] = useState(false);\r\n    const { password, ...other } = data;\r\n    const [formData, setFormData] = useState(other)\r\n    const [profileImage, setProfileImage] = useState(null)\r\n    const [coverImage, setCoverImage] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.name + e.target.value);\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n    const onImageChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            var img = e.target.files[0]\r\n            e.target.name == \"profileImage\" ? setProfileImage(img) : setCoverImage(img)\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let UserData = formData;\r\n        if (profileImage) {\r\n            const data = new FormData();\r\n            const fileName = Date.now() + profileImage.name;\r\n            data.append(\"name\", fileName);\r\n            data.append(\"file\", profileImage);\r\n            UserData.profilePicture = fileName;\r\n            try {\r\n                console.log(data);\r\n                dispatch(uploadImage(data));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        if (coverImage) {\r\n            const data = new FormData();\r\n            const fileName = Date.now() + coverImage.name;\r\n            data.append(\"name\", fileName);\r\n            data.append(\"file\", coverImage);\r\n            UserData.coverPicture = fileName;\r\n            try {\r\n                console.log(data);\r\n                dispatch(uploadImage(data));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        dispatch(updateUser(params.id, UserData));\r\n        setModelOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal opened={ModelOpene} onClose={() => setModelOpen(false)} size={'55%'} >\r\n                {/* Modal content */}\r\n\r\n                <form action=\"\" className='InfoForm'>\r\n                    <h3>Your Info</h3>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            className='InfoInput'\r\n                            placeholder='First Name'\r\n                            onChange={handleChange}\r\n                            value={formData.firstname}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.lastname}\r\n\r\n                            placeholder='Last Name'\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"worksAt\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.worksAt}\r\n\r\n                            placeholder='First Name'\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"livesIn\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.livesIn}\r\n\r\n                            placeholder='Lives In'\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.country}\r\n\r\n                            placeholder='Country'\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"relationship\"\r\n                            className='InfoInput'\r\n                            onChange={handleChange}\r\n                            value={formData.relationship}\r\n\r\n                            placeholder='Relationship Status'\r\n                        />\r\n\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        Profile Image\r\n                        <input type=\"file\" name=\"profileImage\" onChange={onImageChange} />\r\n\r\n                        Cover Image\r\n                        <input type=\"file\" name=\"coverImage\" onChange={onImageChange} />\r\n                    </div>\r\n\r\n                    <button className='button fc-button' onClick={handleSubmit}>Update</button>\r\n                </form>\r\n            </Modal>\r\n            {/* <Button onClick={open}>Open modal</Button> */}\r\n        </>\r\n    );\r\n}","D:\\git projects\\SocialMedia\\client\\src\\components\\ShareModel\\ShareModel.jsx",["240","241","242"],[],"import { useDisclosure } from '@mantine/hooks';\r\nimport { Modal, Button } from '@mantine/core';\r\nimport { useState } from 'react';\r\nimport PostShare from '../PostShare/PostShare';\r\n\r\n function ShareModel({ ModelOpene, setModelOpen }) {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <Modal opened={ModelOpene} onClose={() => setModelOpen(false)} size={'55%'} >\r\n                {/* Modal content */}\r\n\r\n               <PostShare/>\r\n            </Modal>\r\n            {/* <Button onClick={open}>Open modal</Button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShareModel","D:\\git projects\\SocialMedia\\client\\src\\Action\\AuthAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\AuthRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\store\\reduxStore.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\index.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\AuthReducer.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\uploadAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\uploadRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\reducer\\postReducer.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\postAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\postRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\userRequest.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\Action\\userAction.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\User\\User.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\pages\\chat\\chat.jsx",["243","244"],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\ChatRequesst.js",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\Conversation\\Conversation.jsx",["245"],[],"import React, { useEffect, useState } from 'react'\r\nimport { getUser } from '../../api/userRequest'\r\nimport Profile from \"../../img/profileImg.jpg\"\r\nimport \"./Conversation.css\"\r\nconst Conversation = ({ data, currentUser }) => {\r\n    const [userData, setUserData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const userId = data.members.find((id) => id !== currentUser)\r\n        const getUserData = async () => {\r\n            try {\r\n\r\n\r\n                const { data } = await getUser(userId)\r\n                setUserData(data)\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getUserData()\r\n    }, [])\r\n    return (\r\n        <>\r\n        <div className='follower conversation'>\r\n            <div className='chatlist'>\r\n                <div>\r\n                    <div className='online-dot' >\r\n                    </div>\r\n                    <img src={userData?.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : Profile} className='image' alt=\"\" />\r\n                </div>\r\n                <div className='name' style={{ fontSize: \"0.8rem\" }}>\r\n                    <span>{userData?.firstName}  {userData?.lastname}</span>\r\n                    <span className='online'>Online</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <hr style={{width:'85%', border:\"0.1px solid #ececec\"}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Conversation\r\n","D:\\git projects\\SocialMedia\\client\\src\\components\\NavIcons\\NavIcons.jsx",[],[],"D:\\git projects\\SocialMedia\\client\\src\\components\\ChatBox\\ChatBox.jsx",["246"],[],"D:\\git projects\\SocialMedia\\client\\src\\api\\MessageRequest.js",[],[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"255","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":20},{"ruleId":"251","severity":1,"message":"256","line":5,"column":22,"nodeType":"253","messageId":"254","endLine":5,"endColumn":33},{"ruleId":"251","severity":1,"message":"257","line":6,"column":16,"nodeType":"253","messageId":"254","endLine":6,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":24,"column":31,"nodeType":"260","messageId":"261","endLine":24,"endColumn":33},{"ruleId":"247","replacedBy":"262"},{"ruleId":"249","replacedBy":"263"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":35,"nodeType":"253","messageId":"254","endLine":1,"endColumn":44},{"ruleId":"264","severity":1,"message":"265","line":18,"column":7,"nodeType":"266","endLine":18,"endColumn":9,"suggestions":"267"},{"ruleId":"251","severity":1,"message":"268","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":12},{"ruleId":"251","severity":1,"message":"269","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":12},{"ruleId":"251","severity":1,"message":"270","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":15},{"ruleId":"251","severity":1,"message":"271","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":20},{"ruleId":"251","severity":1,"message":"272","line":9,"column":10,"nodeType":"253","messageId":"254","endLine":9,"endColumn":14},{"ruleId":"264","severity":1,"message":"273","line":31,"column":8,"nodeType":"266","endLine":31,"endColumn":14,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"275","line":1,"column":10,"nodeType":"253","messageId":"254","endLine":1,"endColumn":23},{"ruleId":"251","severity":1,"message":"276","line":2,"column":17,"nodeType":"253","messageId":"254","endLine":2,"endColumn":23},{"ruleId":"251","severity":1,"message":"277","line":17,"column":13,"nodeType":"253","messageId":"254","endLine":17,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":26,"column":27,"nodeType":"280","messageId":"281","endLine":26,"endColumn":29},{"ruleId":"251","severity":1,"message":"275","line":1,"column":10,"nodeType":"253","messageId":"254","endLine":1,"endColumn":23},{"ruleId":"251","severity":1,"message":"276","line":2,"column":17,"nodeType":"253","messageId":"254","endLine":2,"endColumn":23},{"ruleId":"251","severity":1,"message":"282","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":18},{"ruleId":"251","severity":1,"message":"256","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":21},{"ruleId":"251","severity":1,"message":"283","line":16,"column":12,"nodeType":"253","messageId":"254","endLine":16,"endColumn":23},{"ruleId":"264","severity":1,"message":"284","line":21,"column":8,"nodeType":"266","endLine":21,"endColumn":10,"suggestions":"285"},{"ruleId":"264","severity":1,"message":"286","line":83,"column":8,"nodeType":"266","endLine":83,"endColumn":25,"suggestions":"287"},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["288"],["289"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.","ArrayExpression",["290"],"'Home' is defined but never used.","'Noti' is defined but never used.","'Comment' is defined but never used.","'UilSetting' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'profileUserId'. Either include it or remove the dependency array.",["291"],"'useDisclosure' is defined but never used.","'Button' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'onlineUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'data.members'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'chat._id' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["293"],"no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"302","text":"303"},"Update the dependencies array to be: [profileUserId, user]",{"range":"304","text":"305"},"Update the dependencies array to be: [currentUser, data.members]",{"range":"306","text":"307"},"Update the dependencies array to be: [chat._id, messages, receivedMessage]",{"range":"308","text":"309"},[571,573],"[dispatch, user._id]",[1073,1079],"[profileUserId, user]",[657,659],"[currentUser, data.members]",[2483,2500],"[chat._id, messages, receivedMessage]"]